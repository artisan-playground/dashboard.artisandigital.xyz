### This file was generated by Nexus Schema
### Do not make changes to this file directly


input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

type Comment {
  id: Int!
  image: String
  message: String
  task: Task!
  timestamp: DateTime!
  user: User!
}

input CommentCreateInput {
  Comment: CommentCreateManyWithoutReplyInput
  image: String
  message: String
  reply: CommentCreateOneWithoutCommentInput
  task: TaskCreateOneWithoutCommentsInput!
  timestamp: DateTime
  user: UserCreateOneWithoutCommentsInput!
}

input CommentCreateManyWithoutReplyInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutReplyInput!]
}

input CommentCreateManyWithoutTaskInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutTaskInput!]
}

input CommentCreateManyWithoutUserInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutUserInput!]
}

input CommentCreateOneWithoutCommentInput {
  connect: CommentWhereUniqueInput
  create: CommentCreateWithoutCommentInput
}

input CommentCreateWithoutCommentInput {
  image: String
  message: String
  reply: CommentCreateOneWithoutCommentInput
  task: TaskCreateOneWithoutCommentsInput!
  timestamp: DateTime
  user: UserCreateOneWithoutCommentsInput!
}

input CommentCreateWithoutReplyInput {
  Comment: CommentCreateManyWithoutReplyInput
  image: String
  message: String
  task: TaskCreateOneWithoutCommentsInput!
  timestamp: DateTime
  user: UserCreateOneWithoutCommentsInput!
}

input CommentCreateWithoutTaskInput {
  Comment: CommentCreateManyWithoutReplyInput
  image: String
  message: String
  reply: CommentCreateOneWithoutCommentInput
  timestamp: DateTime
  user: UserCreateOneWithoutCommentsInput!
}

input CommentCreateWithoutUserInput {
  Comment: CommentCreateManyWithoutReplyInput
  image: String
  message: String
  reply: CommentCreateOneWithoutCommentInput
  task: TaskCreateOneWithoutCommentsInput!
  timestamp: DateTime
}

input CommentScalarWhereInput {
  AND: [CommentScalarWhereInput!]
  id: IntFilter
  image: StringNullableFilter
  message: StringNullableFilter
  NOT: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  replyId: IntNullableFilter
  taskId: IntFilter
  timestamp: DateTimeFilter
  userId: IntFilter
}

input CommentUpdateInput {
  Comment: CommentUpdateManyWithoutReplyInput
  image: NullableStringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
  reply: CommentUpdateOneWithoutCommentInput
  task: TaskUpdateOneRequiredWithoutCommentsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentsInput
}

input CommentUpdateManyDataInput {
  image: NullableStringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateManyWithoutReplyInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutReplyInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutReplyInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutReplyInput!]
}

input CommentUpdateManyWithoutTaskInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutTaskInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutTaskInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutTaskInput!]
}

input CommentUpdateManyWithoutUserInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutUserInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutUserInput!]
}

input CommentUpdateManyWithWhereNestedInput {
  data: CommentUpdateManyDataInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateOneWithoutCommentInput {
  connect: CommentWhereUniqueInput
  create: CommentCreateWithoutCommentInput
  delete: Boolean
  disconnect: Boolean
  update: CommentUpdateWithoutCommentDataInput
  upsert: CommentUpsertWithoutCommentInput
}

input CommentUpdateWithoutCommentDataInput {
  image: NullableStringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
  reply: CommentUpdateOneWithoutCommentInput
  task: TaskUpdateOneRequiredWithoutCommentsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentsInput
}

input CommentUpdateWithoutReplyDataInput {
  Comment: CommentUpdateManyWithoutReplyInput
  image: NullableStringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
  task: TaskUpdateOneRequiredWithoutCommentsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentsInput
}

input CommentUpdateWithoutTaskDataInput {
  Comment: CommentUpdateManyWithoutReplyInput
  image: NullableStringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
  reply: CommentUpdateOneWithoutCommentInput
  timestamp: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentsInput
}

input CommentUpdateWithoutUserDataInput {
  Comment: CommentUpdateManyWithoutReplyInput
  image: NullableStringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
  reply: CommentUpdateOneWithoutCommentInput
  task: TaskUpdateOneRequiredWithoutCommentsInput
  timestamp: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateWithWhereUniqueWithoutReplyInput {
  data: CommentUpdateWithoutReplyDataInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithWhereUniqueWithoutTaskInput {
  data: CommentUpdateWithoutTaskDataInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithWhereUniqueWithoutUserInput {
  data: CommentUpdateWithoutUserDataInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithoutCommentInput {
  create: CommentCreateWithoutCommentInput!
  update: CommentUpdateWithoutCommentDataInput!
}

input CommentUpsertWithWhereUniqueWithoutReplyInput {
  create: CommentCreateWithoutReplyInput!
  update: CommentUpdateWithoutReplyDataInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutTaskInput {
  create: CommentCreateWithoutTaskInput!
  update: CommentUpdateWithoutTaskDataInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutUserInput {
  create: CommentCreateWithoutUserInput!
  update: CommentUpdateWithoutUserDataInput!
  where: CommentWhereUniqueInput!
}

input CommentWhereUniqueInput {
  id: Int
}

type Contact {
  facebook: String
  github: String
  gitlab: String
  id: Int!
  instagram: String
  twitter: String
}

input ContactCreateInput {
  facebook: String
  github: String
  gitlab: String
  instagram: String
  twitter: String
  User: UserCreateManyWithoutContactsInput
}

input ContactCreateOneWithoutUserInput {
  connect: ContactWhereUniqueInput
  create: ContactCreateWithoutUserInput
}

input ContactCreateWithoutUserInput {
  facebook: String
  github: String
  gitlab: String
  instagram: String
  twitter: String
}

input ContactUpdateInput {
  facebook: NullableStringFieldUpdateOperationsInput
  github: NullableStringFieldUpdateOperationsInput
  gitlab: NullableStringFieldUpdateOperationsInput
  instagram: NullableStringFieldUpdateOperationsInput
  twitter: NullableStringFieldUpdateOperationsInput
  User: UserUpdateManyWithoutContactsInput
}

input ContactUpdateOneRequiredWithoutUserInput {
  connect: ContactWhereUniqueInput
  create: ContactCreateWithoutUserInput
  update: ContactUpdateWithoutUserDataInput
  upsert: ContactUpsertWithoutUserInput
}

input ContactUpdateWithoutUserDataInput {
  facebook: NullableStringFieldUpdateOperationsInput
  github: NullableStringFieldUpdateOperationsInput
  gitlab: NullableStringFieldUpdateOperationsInput
  instagram: NullableStringFieldUpdateOperationsInput
  twitter: NullableStringFieldUpdateOperationsInput
}

input ContactUpsertWithoutUserInput {
  create: ContactCreateWithoutUserInput!
  update: ContactUpdateWithoutUserDataInput!
}

input ContactWhereUniqueInput {
  id: Int
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

type Event {
  endDate: DateTime!
  eventDate: DateTime!
  eventName: String
  id: Int!
  invited(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  note: String
  tag: String
}

input EventCreateInput {
  endDate: DateTime!
  eventDate: DateTime
  eventName: String
  invited: UserCreateManyWithoutEventInput
  note: String
  tag: String
}

input EventCreateManyWithoutInvitedInput {
  connect: [EventWhereUniqueInput!]
  create: [EventCreateWithoutInvitedInput!]
}

input EventCreateWithoutInvitedInput {
  endDate: DateTime!
  eventDate: DateTime
  eventName: String
  note: String
  tag: String
}

input EventScalarWhereInput {
  AND: [EventScalarWhereInput!]
  endDate: DateTimeFilter
  eventDate: DateTimeFilter
  eventName: StringNullableFilter
  id: IntFilter
  NOT: [EventScalarWhereInput!]
  note: StringNullableFilter
  OR: [EventScalarWhereInput!]
  tag: StringNullableFilter
}

input EventUpdateInput {
  endDate: DateTimeFieldUpdateOperationsInput
  eventDate: DateTimeFieldUpdateOperationsInput
  eventName: NullableStringFieldUpdateOperationsInput
  invited: UserUpdateManyWithoutEventInput
  note: NullableStringFieldUpdateOperationsInput
  tag: NullableStringFieldUpdateOperationsInput
}

input EventUpdateManyDataInput {
  endDate: DateTimeFieldUpdateOperationsInput
  eventDate: DateTimeFieldUpdateOperationsInput
  eventName: NullableStringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  tag: NullableStringFieldUpdateOperationsInput
}

input EventUpdateManyWithoutInvitedInput {
  connect: [EventWhereUniqueInput!]
  create: [EventCreateWithoutInvitedInput!]
  delete: [EventWhereUniqueInput!]
  deleteMany: [EventScalarWhereInput!]
  disconnect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutInvitedInput!]
  updateMany: [EventUpdateManyWithWhereNestedInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutInvitedInput!]
}

input EventUpdateManyWithWhereNestedInput {
  data: EventUpdateManyDataInput!
  where: EventScalarWhereInput!
}

input EventUpdateWithoutInvitedDataInput {
  endDate: DateTimeFieldUpdateOperationsInput
  eventDate: DateTimeFieldUpdateOperationsInput
  eventName: NullableStringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  tag: NullableStringFieldUpdateOperationsInput
}

input EventUpdateWithWhereUniqueWithoutInvitedInput {
  data: EventUpdateWithoutInvitedDataInput!
  where: EventWhereUniqueInput!
}

input EventUpsertWithWhereUniqueWithoutInvitedInput {
  create: EventCreateWithoutInvitedInput!
  update: EventUpdateWithoutInvitedDataInput!
  where: EventWhereUniqueInput!
}

input EventWhereUniqueInput {
  id: Int
}

type File {
  id: Int!
  name: String
  status: String
  task: Task!
  url: String
}

input FileCreateInput {
  name: String
  status: String
  task: TaskCreateOneWithoutFilesInput!
  url: String
}

input FileCreateManyWithoutTaskInput {
  connect: [FileWhereUniqueInput!]
  create: [FileCreateWithoutTaskInput!]
}

input FileCreateWithoutTaskInput {
  name: String
  status: String
  url: String
}

input FileScalarWhereInput {
  AND: [FileScalarWhereInput!]
  id: IntFilter
  name: StringNullableFilter
  NOT: [FileScalarWhereInput!]
  OR: [FileScalarWhereInput!]
  status: StringNullableFilter
  taskId: IntFilter
  url: StringNullableFilter
}

input FileUpdateInput {
  name: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  task: TaskUpdateOneRequiredWithoutFilesInput
  url: NullableStringFieldUpdateOperationsInput
}

input FileUpdateManyDataInput {
  name: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input FileUpdateManyWithoutTaskInput {
  connect: [FileWhereUniqueInput!]
  create: [FileCreateWithoutTaskInput!]
  delete: [FileWhereUniqueInput!]
  deleteMany: [FileScalarWhereInput!]
  disconnect: [FileWhereUniqueInput!]
  set: [FileWhereUniqueInput!]
  update: [FileUpdateWithWhereUniqueWithoutTaskInput!]
  updateMany: [FileUpdateManyWithWhereNestedInput!]
  upsert: [FileUpsertWithWhereUniqueWithoutTaskInput!]
}

input FileUpdateManyWithWhereNestedInput {
  data: FileUpdateManyDataInput!
  where: FileScalarWhereInput!
}

input FileUpdateWithoutTaskDataInput {
  name: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input FileUpdateWithWhereUniqueWithoutTaskInput {
  data: FileUpdateWithoutTaskDataInput!
  where: FileWhereUniqueInput!
}

input FileUpsertWithWhereUniqueWithoutTaskInput {
  create: FileCreateWithoutTaskInput!
  update: FileUpdateWithoutTaskDataInput!
  where: FileWhereUniqueInput!
}

input FileWhereUniqueInput {
  id: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Mutation {
  createOneComment(data: CommentCreateInput!): Comment!
  createOneContact(data: ContactCreateInput!): Contact!
  createOneEvent(data: EventCreateInput!): Event!
  createOneFile(data: FileCreateInput!): File!
  createOneProject(data: ProjectCreateInput!): Project!
  createOneTask(data: TaskCreateInput!): Task!
  createOneUser(data: UserCreateInput!): User!
  deleteOneComment(where: CommentWhereUniqueInput!): Comment
  deleteOneContact(where: ContactWhereUniqueInput!): Contact
  deleteOneEvent(where: EventWhereUniqueInput!): Event
  deleteOneFile(where: FileWhereUniqueInput!): File
  deleteOneProject(where: ProjectWhereUniqueInput!): Project
  deleteOneTask(where: TaskWhereUniqueInput!): Task
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateOneComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updateOneContact(data: ContactUpdateInput!, where: ContactWhereUniqueInput!): Contact
  updateOneEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event
  updateOneFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File
  updateOneProject(data: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project
  updateOneTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Project {
  dueDate: DateTime!
  id: Int!
  members(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  projectDetail: String
  projectImage: String
  projectName: String
  projectType: String
  status: String
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
}

input ProjectCreateInput {
  dueDate: DateTime!
  members: UserCreateManyWithoutProjectsInput
  projectDetail: String
  projectImage: String
  projectName: String
  projectType: String
  status: String
  tasks: TaskCreateManyWithoutProjectInput
}

input ProjectCreateManyWithoutMembersInput {
  connect: [ProjectWhereUniqueInput!]
  create: [ProjectCreateWithoutMembersInput!]
}

input ProjectCreateOneWithoutTasksInput {
  connect: ProjectWhereUniqueInput
  create: ProjectCreateWithoutTasksInput
}

input ProjectCreateWithoutMembersInput {
  dueDate: DateTime!
  projectDetail: String
  projectImage: String
  projectName: String
  projectType: String
  status: String
  tasks: TaskCreateManyWithoutProjectInput
}

input ProjectCreateWithoutTasksInput {
  dueDate: DateTime!
  members: UserCreateManyWithoutProjectsInput
  projectDetail: String
  projectImage: String
  projectName: String
  projectType: String
  status: String
}

input ProjectScalarWhereInput {
  AND: [ProjectScalarWhereInput!]
  dueDate: DateTimeFilter
  id: IntFilter
  NOT: [ProjectScalarWhereInput!]
  OR: [ProjectScalarWhereInput!]
  projectDetail: StringNullableFilter
  projectImage: StringNullableFilter
  projectName: StringNullableFilter
  projectType: StringNullableFilter
  status: StringNullableFilter
}

input ProjectUpdateInput {
  dueDate: DateTimeFieldUpdateOperationsInput
  members: UserUpdateManyWithoutProjectsInput
  projectDetail: NullableStringFieldUpdateOperationsInput
  projectImage: NullableStringFieldUpdateOperationsInput
  projectName: NullableStringFieldUpdateOperationsInput
  projectType: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tasks: TaskUpdateManyWithoutProjectInput
}

input ProjectUpdateManyDataInput {
  dueDate: DateTimeFieldUpdateOperationsInput
  projectDetail: NullableStringFieldUpdateOperationsInput
  projectImage: NullableStringFieldUpdateOperationsInput
  projectName: NullableStringFieldUpdateOperationsInput
  projectType: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input ProjectUpdateManyWithoutMembersInput {
  connect: [ProjectWhereUniqueInput!]
  create: [ProjectCreateWithoutMembersInput!]
  delete: [ProjectWhereUniqueInput!]
  deleteMany: [ProjectScalarWhereInput!]
  disconnect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutMembersInput!]
  updateMany: [ProjectUpdateManyWithWhereNestedInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutMembersInput!]
}

input ProjectUpdateManyWithWhereNestedInput {
  data: ProjectUpdateManyDataInput!
  where: ProjectScalarWhereInput!
}

input ProjectUpdateOneRequiredWithoutTasksInput {
  connect: ProjectWhereUniqueInput
  create: ProjectCreateWithoutTasksInput
  update: ProjectUpdateWithoutTasksDataInput
  upsert: ProjectUpsertWithoutTasksInput
}

input ProjectUpdateWithoutMembersDataInput {
  dueDate: DateTimeFieldUpdateOperationsInput
  projectDetail: NullableStringFieldUpdateOperationsInput
  projectImage: NullableStringFieldUpdateOperationsInput
  projectName: NullableStringFieldUpdateOperationsInput
  projectType: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tasks: TaskUpdateManyWithoutProjectInput
}

input ProjectUpdateWithoutTasksDataInput {
  dueDate: DateTimeFieldUpdateOperationsInput
  members: UserUpdateManyWithoutProjectsInput
  projectDetail: NullableStringFieldUpdateOperationsInput
  projectImage: NullableStringFieldUpdateOperationsInput
  projectName: NullableStringFieldUpdateOperationsInput
  projectType: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input ProjectUpdateWithWhereUniqueWithoutMembersInput {
  data: ProjectUpdateWithoutMembersDataInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpsertWithoutTasksInput {
  create: ProjectCreateWithoutTasksInput!
  update: ProjectUpdateWithoutTasksDataInput!
}

input ProjectUpsertWithWhereUniqueWithoutMembersInput {
  create: ProjectCreateWithoutMembersInput!
  update: ProjectUpdateWithoutMembersDataInput!
  where: ProjectWhereUniqueInput!
}

input ProjectWhereUniqueInput {
  id: Int
}

type Query {
  comment(where: CommentWhereUniqueInput!): Comment
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  contact(where: ContactWhereUniqueInput!): Contact
  contacts(after: ContactWhereUniqueInput, before: ContactWhereUniqueInput, first: Int, last: Int): [Contact!]!
  event(where: EventWhereUniqueInput!): Event
  events(after: EventWhereUniqueInput, before: EventWhereUniqueInput, first: Int, last: Int): [Event!]!
  file(where: FileWhereUniqueInput!): File
  files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int): [File!]!
  getTaskByProjectId(id: Int!): [Task!]
  project(where: ProjectWhereUniqueInput!): Project
  projects(after: ProjectWhereUniqueInput, before: ProjectWhereUniqueInput, first: Int, last: Int): [Project!]!
  task(where: TaskWhereUniqueInput!): Task
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

enum Role {
  ADMIN
  USER
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
}

type Task {
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  endTime: DateTime!
  files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int): [File!]!
  id: Int!
  isDone: Boolean!
  members(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  project: Project!
  startTime: DateTime!
  taskDetail: String
  taskName: String
}

input TaskCreateInput {
  comments: CommentCreateManyWithoutTaskInput
  endTime: DateTime!
  files: FileCreateManyWithoutTaskInput
  isDone: Boolean!
  members: UserCreateManyWithoutTasksInput
  project: ProjectCreateOneWithoutTasksInput!
  startTime: DateTime
  taskDetail: String
  taskName: String
}

input TaskCreateManyWithoutMembersInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutMembersInput!]
}

input TaskCreateManyWithoutProjectInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutProjectInput!]
}

input TaskCreateOneWithoutCommentsInput {
  connect: TaskWhereUniqueInput
  create: TaskCreateWithoutCommentsInput
}

input TaskCreateOneWithoutFilesInput {
  connect: TaskWhereUniqueInput
  create: TaskCreateWithoutFilesInput
}

input TaskCreateWithoutCommentsInput {
  endTime: DateTime!
  files: FileCreateManyWithoutTaskInput
  isDone: Boolean!
  members: UserCreateManyWithoutTasksInput
  project: ProjectCreateOneWithoutTasksInput!
  startTime: DateTime
  taskDetail: String
  taskName: String
}

input TaskCreateWithoutFilesInput {
  comments: CommentCreateManyWithoutTaskInput
  endTime: DateTime!
  isDone: Boolean!
  members: UserCreateManyWithoutTasksInput
  project: ProjectCreateOneWithoutTasksInput!
  startTime: DateTime
  taskDetail: String
  taskName: String
}

input TaskCreateWithoutMembersInput {
  comments: CommentCreateManyWithoutTaskInput
  endTime: DateTime!
  files: FileCreateManyWithoutTaskInput
  isDone: Boolean!
  project: ProjectCreateOneWithoutTasksInput!
  startTime: DateTime
  taskDetail: String
  taskName: String
}

input TaskCreateWithoutProjectInput {
  comments: CommentCreateManyWithoutTaskInput
  endTime: DateTime!
  files: FileCreateManyWithoutTaskInput
  isDone: Boolean!
  members: UserCreateManyWithoutTasksInput
  startTime: DateTime
  taskDetail: String
  taskName: String
}

input TaskScalarWhereInput {
  AND: [TaskScalarWhereInput!]
  endTime: DateTimeFilter
  id: IntFilter
  isDone: BoolFilter
  NOT: [TaskScalarWhereInput!]
  OR: [TaskScalarWhereInput!]
  projectId: IntFilter
  startTime: DateTimeFilter
  taskDetail: StringNullableFilter
  taskName: StringNullableFilter
}

input TaskUpdateInput {
  comments: CommentUpdateManyWithoutTaskInput
  endTime: DateTimeFieldUpdateOperationsInput
  files: FileUpdateManyWithoutTaskInput
  isDone: BoolFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTasksInput
  project: ProjectUpdateOneRequiredWithoutTasksInput
  startTime: DateTimeFieldUpdateOperationsInput
  taskDetail: NullableStringFieldUpdateOperationsInput
  taskName: NullableStringFieldUpdateOperationsInput
}

input TaskUpdateManyDataInput {
  endTime: DateTimeFieldUpdateOperationsInput
  isDone: BoolFieldUpdateOperationsInput
  startTime: DateTimeFieldUpdateOperationsInput
  taskDetail: NullableStringFieldUpdateOperationsInput
  taskName: NullableStringFieldUpdateOperationsInput
}

input TaskUpdateManyWithoutMembersInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutMembersInput!]
  delete: [TaskWhereUniqueInput!]
  deleteMany: [TaskScalarWhereInput!]
  disconnect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutMembersInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutMembersInput!]
}

input TaskUpdateManyWithoutProjectInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutProjectInput!]
  delete: [TaskWhereUniqueInput!]
  deleteMany: [TaskScalarWhereInput!]
  disconnect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutProjectInput!]
}

input TaskUpdateManyWithWhereNestedInput {
  data: TaskUpdateManyDataInput!
  where: TaskScalarWhereInput!
}

input TaskUpdateOneRequiredWithoutCommentsInput {
  connect: TaskWhereUniqueInput
  create: TaskCreateWithoutCommentsInput
  update: TaskUpdateWithoutCommentsDataInput
  upsert: TaskUpsertWithoutCommentsInput
}

input TaskUpdateOneRequiredWithoutFilesInput {
  connect: TaskWhereUniqueInput
  create: TaskCreateWithoutFilesInput
  update: TaskUpdateWithoutFilesDataInput
  upsert: TaskUpsertWithoutFilesInput
}

input TaskUpdateWithoutCommentsDataInput {
  endTime: DateTimeFieldUpdateOperationsInput
  files: FileUpdateManyWithoutTaskInput
  isDone: BoolFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTasksInput
  project: ProjectUpdateOneRequiredWithoutTasksInput
  startTime: DateTimeFieldUpdateOperationsInput
  taskDetail: NullableStringFieldUpdateOperationsInput
  taskName: NullableStringFieldUpdateOperationsInput
}

input TaskUpdateWithoutFilesDataInput {
  comments: CommentUpdateManyWithoutTaskInput
  endTime: DateTimeFieldUpdateOperationsInput
  isDone: BoolFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTasksInput
  project: ProjectUpdateOneRequiredWithoutTasksInput
  startTime: DateTimeFieldUpdateOperationsInput
  taskDetail: NullableStringFieldUpdateOperationsInput
  taskName: NullableStringFieldUpdateOperationsInput
}

input TaskUpdateWithoutMembersDataInput {
  comments: CommentUpdateManyWithoutTaskInput
  endTime: DateTimeFieldUpdateOperationsInput
  files: FileUpdateManyWithoutTaskInput
  isDone: BoolFieldUpdateOperationsInput
  project: ProjectUpdateOneRequiredWithoutTasksInput
  startTime: DateTimeFieldUpdateOperationsInput
  taskDetail: NullableStringFieldUpdateOperationsInput
  taskName: NullableStringFieldUpdateOperationsInput
}

input TaskUpdateWithoutProjectDataInput {
  comments: CommentUpdateManyWithoutTaskInput
  endTime: DateTimeFieldUpdateOperationsInput
  files: FileUpdateManyWithoutTaskInput
  isDone: BoolFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTasksInput
  startTime: DateTimeFieldUpdateOperationsInput
  taskDetail: NullableStringFieldUpdateOperationsInput
  taskName: NullableStringFieldUpdateOperationsInput
}

input TaskUpdateWithWhereUniqueWithoutMembersInput {
  data: TaskUpdateWithoutMembersDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpdateWithWhereUniqueWithoutProjectInput {
  data: TaskUpdateWithoutProjectDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpsertWithoutCommentsInput {
  create: TaskCreateWithoutCommentsInput!
  update: TaskUpdateWithoutCommentsDataInput!
}

input TaskUpsertWithoutFilesInput {
  create: TaskCreateWithoutFilesInput!
  update: TaskUpdateWithoutFilesDataInput!
}

input TaskUpsertWithWhereUniqueWithoutMembersInput {
  create: TaskCreateWithoutMembersInput!
  update: TaskUpdateWithoutMembersDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpsertWithWhereUniqueWithoutProjectInput {
  create: TaskCreateWithoutProjectInput!
  update: TaskUpdateWithoutProjectDataInput!
  where: TaskWhereUniqueInput!
}

input TaskWhereUniqueInput {
  id: Int
}

type User {
  contacts: Contact!
  department: String
  email: String!
  id: Int!
  image: String
  name: String
  position: String
  projects(after: ProjectWhereUniqueInput, before: ProjectWhereUniqueInput, first: Int, last: Int): [Project!]!
  skills: [String!]!
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
  type: String
}

input UserCreateInput {
  comments: CommentCreateManyWithoutUserInput
  contacts: ContactCreateOneWithoutUserInput!
  department: String
  email: String!
  event: EventCreateManyWithoutInvitedInput
  image: String
  name: String
  position: String
  projects: ProjectCreateManyWithoutMembersInput
  role: Role
  skills: UserCreateskillsInput
  tasks: TaskCreateManyWithoutMembersInput
  type: String
}

input UserCreateManyWithoutContactsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutContactsInput!]
}

input UserCreateManyWithoutEventInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutEventInput!]
}

input UserCreateManyWithoutProjectsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutProjectsInput!]
}

input UserCreateManyWithoutTasksInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutTasksInput!]
}

input UserCreateOneWithoutCommentsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCommentsInput
}

input UserCreateskillsInput {
  set: [String!]
}

input UserCreateWithoutCommentsInput {
  contacts: ContactCreateOneWithoutUserInput!
  department: String
  email: String!
  event: EventCreateManyWithoutInvitedInput
  image: String
  name: String
  position: String
  projects: ProjectCreateManyWithoutMembersInput
  role: Role
  skills: UserCreateskillsInput
  tasks: TaskCreateManyWithoutMembersInput
  type: String
}

input UserCreateWithoutContactsInput {
  comments: CommentCreateManyWithoutUserInput
  department: String
  email: String!
  event: EventCreateManyWithoutInvitedInput
  image: String
  name: String
  position: String
  projects: ProjectCreateManyWithoutMembersInput
  role: Role
  skills: UserCreateskillsInput
  tasks: TaskCreateManyWithoutMembersInput
  type: String
}

input UserCreateWithoutEventInput {
  comments: CommentCreateManyWithoutUserInput
  contacts: ContactCreateOneWithoutUserInput!
  department: String
  email: String!
  image: String
  name: String
  position: String
  projects: ProjectCreateManyWithoutMembersInput
  role: Role
  skills: UserCreateskillsInput
  tasks: TaskCreateManyWithoutMembersInput
  type: String
}

input UserCreateWithoutProjectsInput {
  comments: CommentCreateManyWithoutUserInput
  contacts: ContactCreateOneWithoutUserInput!
  department: String
  email: String!
  event: EventCreateManyWithoutInvitedInput
  image: String
  name: String
  position: String
  role: Role
  skills: UserCreateskillsInput
  tasks: TaskCreateManyWithoutMembersInput
  type: String
}

input UserCreateWithoutTasksInput {
  comments: CommentCreateManyWithoutUserInput
  contacts: ContactCreateOneWithoutUserInput!
  department: String
  email: String!
  event: EventCreateManyWithoutInvitedInput
  image: String
  name: String
  position: String
  projects: ProjectCreateManyWithoutMembersInput
  role: Role
  skills: UserCreateskillsInput
  type: String
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  contactId: IntFilter
  department: StringNullableFilter
  email: StringFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringNullableFilter
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  position: StringNullableFilter
  role: Role
  skills: StringNullableListFilter
  type: StringNullableFilter
}

input UserUpdateInput {
  comments: CommentUpdateManyWithoutUserInput
  contacts: ContactUpdateOneRequiredWithoutUserInput
  department: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  event: EventUpdateManyWithoutInvitedInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  projects: ProjectUpdateManyWithoutMembersInput
  role: Role
  skills: UserUpdateskillsInput
  tasks: TaskUpdateManyWithoutMembersInput
  type: NullableStringFieldUpdateOperationsInput
}

input UserUpdateManyDataInput {
  department: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  role: Role
  skills: UserUpdateskillsInput
  type: NullableStringFieldUpdateOperationsInput
}

input UserUpdateManyWithoutContactsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutContactsInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutContactsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutContactsInput!]
}

input UserUpdateManyWithoutEventInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutEventInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutEventInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutEventInput!]
}

input UserUpdateManyWithoutProjectsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutProjectsInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutProjectsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutProjectsInput!]
}

input UserUpdateManyWithoutTasksInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutTasksInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutTasksInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutTasksInput!]
}

input UserUpdateManyWithWhereNestedInput {
  data: UserUpdateManyDataInput!
  where: UserScalarWhereInput!
}

input UserUpdateOneRequiredWithoutCommentsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCommentsInput
  update: UserUpdateWithoutCommentsDataInput
  upsert: UserUpsertWithoutCommentsInput
}

input UserUpdateskillsInput {
  set: [String!]
}

input UserUpdateWithoutCommentsDataInput {
  contacts: ContactUpdateOneRequiredWithoutUserInput
  department: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  event: EventUpdateManyWithoutInvitedInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  projects: ProjectUpdateManyWithoutMembersInput
  role: Role
  skills: UserUpdateskillsInput
  tasks: TaskUpdateManyWithoutMembersInput
  type: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutContactsDataInput {
  comments: CommentUpdateManyWithoutUserInput
  department: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  event: EventUpdateManyWithoutInvitedInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  projects: ProjectUpdateManyWithoutMembersInput
  role: Role
  skills: UserUpdateskillsInput
  tasks: TaskUpdateManyWithoutMembersInput
  type: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutEventDataInput {
  comments: CommentUpdateManyWithoutUserInput
  contacts: ContactUpdateOneRequiredWithoutUserInput
  department: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  projects: ProjectUpdateManyWithoutMembersInput
  role: Role
  skills: UserUpdateskillsInput
  tasks: TaskUpdateManyWithoutMembersInput
  type: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutProjectsDataInput {
  comments: CommentUpdateManyWithoutUserInput
  contacts: ContactUpdateOneRequiredWithoutUserInput
  department: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  event: EventUpdateManyWithoutInvitedInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  role: Role
  skills: UserUpdateskillsInput
  tasks: TaskUpdateManyWithoutMembersInput
  type: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutTasksDataInput {
  comments: CommentUpdateManyWithoutUserInput
  contacts: ContactUpdateOneRequiredWithoutUserInput
  department: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  event: EventUpdateManyWithoutInvitedInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  projects: ProjectUpdateManyWithoutMembersInput
  role: Role
  skills: UserUpdateskillsInput
  type: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithWhereUniqueWithoutContactsInput {
  data: UserUpdateWithoutContactsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutEventInput {
  data: UserUpdateWithoutEventDataInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutProjectsInput {
  data: UserUpdateWithoutProjectsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutTasksInput {
  data: UserUpdateWithoutTasksDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutCommentsInput {
  create: UserCreateWithoutCommentsInput!
  update: UserUpdateWithoutCommentsDataInput!
}

input UserUpsertWithWhereUniqueWithoutContactsInput {
  create: UserCreateWithoutContactsInput!
  update: UserUpdateWithoutContactsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutEventInput {
  create: UserCreateWithoutEventInput!
  update: UserUpdateWithoutEventDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutProjectsInput {
  create: UserCreateWithoutProjectsInput!
  update: UserUpdateWithoutProjectsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutTasksInput {
  create: UserCreateWithoutTasksInput!
  update: UserUpdateWithoutTasksDataInput!
  where: UserWhereUniqueInput!
}

input UserWhereUniqueInput {
  email: String
  id: Int
}

generator prisma_client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model User {
  id       Int             @id @default(autoincrement())
  email    String          @unique
  name     String?
  image    String?
  position String?
  skills   String[]
  contacts Contact[]
  comments Comment[]
  role     Role            @default(USER)
  projects ProjectOnUser[]
  tasks    TaskOnUser[]
}

model Contact {
  id        Int     @id @default(autoincrement())
  facebook  String?
  twitter   String?
  instagram String?
  gitlab    String?
  github    String?
  user      User?   @relation(fields: [userId], references: [id])
  userId    Int?
}

model Project {
  id            Int             @id @default(autoincrement())
  projectName   String?
  projectType   String?
  projectDetail String?
  projectImage  String?
  status        String?         @default(value: "undone")
  dueDate       DateTime
  members       ProjectOnUser[]
  task          Task[]
}

model ProjectOnUser {
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  createdAt DateTime @default(now())
  @@id([userId, projectId])
}

model Task {
  id         Int          @id @default(autoincrement())
  Project    Project?     @relation(fields: [projectId], references: [id])
  projectId  Int?
  taskName   String?
  startTime  DateTime     @default(now())
  endTime    DateTime
  taskDetail String?
  isDone     Boolean
  members    TaskOnUser[]
  comments   Comment[]
  files      File[]
}

model TaskOnUser {
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  task     Task     @relation(fields: [taskId], references: [id])
  taskId   Int
  cretedAt DateTime @default(now())
  @@id([userId, taskId])
}

model File {
  id     Int     @id @default(autoincrement())
  url    String?
  name   String?
  status String?
  task   Task?   @relation(fields: [taskId], references: [id])
  taskId Int?
}

model Comment {
  id        Int      @id @default(autoincrement())
  timestamp DateTime @default(now())
  users     User?    @relation(fields: [userId], references: [id])
  userId    Int?
  userImg   String?
  userName  String?
  image     String?
  message   String?
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    Int?
}

enum Role {
  ADMIN
  USER
}

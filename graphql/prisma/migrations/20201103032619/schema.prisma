generator prisma_client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model User {
  id         Int             @id @default(autoincrement())
  email      String          @unique
  name       String
  image      Image?
  position   String?
  department String?
  type       String?
  skills     String[]
  contacts   Contact?         @relation(fields: [contactId], references: [id])
  contactId  Int?
  comments   Comment[]
  projects   Project[]
  tasks      Task[]
  event      Event[]
  startDate  DateTime?        @default(now())
  dueDate    DateTime?
  role       Role             @default(USER)
}

model Contact {
  id        Int       @id @default(autoincrement())
  facebook  String?
  twitter   String?
  instagram String?
  gitlab    String?
  github    String?
  User      User[]
}

model Project {
  id            Int             @id @default(autoincrement())
  projectName   String?
  projectType   String?
  projectDetail String?
  projectImage  ProjectImage?
  status        String?         @default(value: "undone")
  dueDate       DateTime?
  members       User[]
  tasks         Task[]
}

model Task {
  id         Int          @id @default(autoincrement())
  project    Project      @relation(fields: [projectId], references: [id])
  projectId  Int
  taskName   String?
  startTime  DateTime?    @default(now())
  endTime    DateTime?
  taskDetail String?
  isDone     Boolean?     @default(value: false)
  members    User[]
  files      File[]
  comments   Comment[]
}

model File {
  task      Task
  id        Int     @id @default(autoincrement())
  endpoint  String
  path      String
  fullPath  String
  fileName  String
  extension String
}

model Comment {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  task      Task       @relation(fields: [taskId], references: [id])
  taskId    Int
  timestamp DateTime?  @default(now())
  image     String?
  message   String?
  replyId   Int?
  reply     Comment?   @relation("ReplyComment", fields: [replyId], references: [id])
}

model Event{
  id        Int        @id @default(autoincrement())
  eventDate DateTime?  @default(now())
  endDate   DateTime?
  eventName String
  note      String?
  tag       String?
  invited   User[]
}

model Image {
  id        Int     @id @default(autoincrement())
  endpoint  String
  path      String
  fullPath  String
  fileName  String
  extension String
}

model ProjectImage {
  id        Int     @id @default(autoincrement())
  endpoint  String
  path      String
  fullPath  String
  fileName  String
  extension String
}

enum Role {
  ADMIN
  USER
}
